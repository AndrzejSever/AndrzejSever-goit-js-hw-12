import{a as w,S as P,i as x}from"./assets/vendor-b11e2a50.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(e){if(e.ep)return;e.ep=!0;const r=n(e);fetch(e.href,r)}})();const p=t=>t.map(({webformatURL:s,largeImageURL:n,tags:a,likes:e,views:r,comments:i,downloads:b})=>`
            <li class="gallery-item">
              <a class="gallery-link" href="${n}">
                <img
                  class="gallery-image"
                  src="${s}"
                  alt="${a}"                />
              </a>
              <div class="small-content">
                <small class="text-body-likes"><span class="text-body">Likes:</span> <span class="quantity">${e}</span></small>
                <small class="text-body-views"><span class="text-body">Views:</span> <span class="quantity">${r}</span></small>
                <small class="text-body-comments"><span class="text-body">Comments:</span> <span class="quantity">${i}</span></small>
                <small class="text-body-downloads"><span class="text-body">Downloads:</span> <span class="quantity">${b}</span></small>
              </div>
            </li>
          `).join(""),E="https://pixabay.com/api/",S="43896740-362a21d10e9d41ec216c05f15",g=async(t,s=1,n=15)=>{const a=new URLSearchParams({key:S,q:t,image_type:"photo",orientation:"horizontal",safesearch:!0,page:s,per_page:n});try{return(await w.get(`${E}?${a}`)).data}catch(e){throw console.error(e),e}},y=document.querySelector(".js-gallery"),q=document.querySelector(".js-search-form"),u=document.querySelector(".js-load-more"),v=document.querySelector(".js-loader");let l=1,m="";const d=15;let L=new P(".js-gallery a"),c=0;function o(t){x.error({title:"Error",message:t,position:"topRight",timeout:2e3})}function f(){y.innerHTML=""}function h(t){v.classList.toggle("is-hidden",!t)}async function $(t){if(t.preventDefault(),m=t.target.elements.searchKeyword.value.trim(),!m){f(),t.target.reset(),o("Illegal operation");return}l=1,c=0,f(),u.classList.add("is-hidden"),h(!0);try{const s=await g(m,l,d);c=s.totalHits,c===0?o("Sorry, there are no images matching your search query. Please try again!"):(y.innerHTML=p(s.hits),L.refresh(),s.hits.length<d||c<=l*d?o("We're sorry, but you've reached the end of search results."):u.classList.remove("is-hidden"))}catch{o("Failed to fetch images. Please try again later.")}finally{t.target.reset(),h(!1)}}async function j(){l+=1,h(!0),u.classList.add("is-hidden");try{const t=await g(m,l,d);y.insertAdjacentHTML("beforeend",p(t.hits)),L.refresh(),t.hits.length===0||c<=l*d?o("We're sorry, but you've reached the end of search results."):u.classList.remove("is-hidden");const{height:s}=y.firstElementChild.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}catch{o("Failed to fetch images. Please try again later.")}finally{h(!1)}}q.addEventListener("submit",$);u.addEventListener("click",j);
//# sourceMappingURL=commonHelpers.js.map
